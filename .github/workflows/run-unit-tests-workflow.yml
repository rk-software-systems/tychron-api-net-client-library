name: Run Unit Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build UnitTests/RK.Tychron.Tests/RK.Tychron.Tests.csproj --configuration Release

    - name: Run tests
      run: dotnet test UnitTests/RK.Tychron.Tests/RK.Tychron.Tests.csproj --configuration Release --no-build --collect "XPlat Code Coverage"
    - name: Check test results
      run: |
        test_exit_code=$(dotnet test --list-tests --no-build | grep -q "Total: 0 Passed:"; echo $?)
        if [ "$test_exit_code" -eq 0 ]; then
          echo "Tests failed. Failing the workflow."
          exit 1
        fi

    - name: Upload code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage-results
        path: |
          ./RK.Tychron.Tests/coverage.xml  # Adjust the path based on your project structure
  
  update-pr-check:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Set pull request check
      uses: actions/github-script@v7
      with:
        script: |
          const status = "completed";
          const conclusion = context.job == 'test' ? 'success' : 'failure';
          const title = "Run Unit Tests";
          const summary = conclusion === 'success' ? "All unit tests passed." : "Tests failed.";
          const annotations = [];

          if (conclusion === 'failure') {
            annotations.push({path: "path/to/file", start_line: 1, end_line: 1, annotation_level: "failure", message: "Test failed"});
          }

          github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: title,
            head_sha: github.sha,
            status: status,
            conclusion: conclusion,
            output: {
              title: title,
              summary: summary,
              annotations: annotations
            }
          });